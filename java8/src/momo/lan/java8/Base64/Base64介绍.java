package momo.lan.java8.Base64;

/**
 * @program: java-jdk-point
 * @description: jdk8 内置了Base64编码 测试一下
 * java8的Api提供了Basic编码、URL编码、MIME编码、对流的支持
 * @author: zhanghui2018
 * @create: 2019-01-30 16:41
 */
public class Base64介绍 {
    /*
    介绍：
        Base64是一种字符串编码格式，采用了A-Z，a-z，0-9，“+”和“/”这64个字符来编码原始字符
        （还有垫字符“=”）。一个字符本身是一个字节，也就是8位，而base64编码后的一个字符只能表示6位的信息。
        也就是原始字符串中的3字节的信息编码会变成4字节的信息。Base64的主要作用是满足MIME的传输需求。
     */

    /*
     原理：
        为什么会有Base64编码呢？因为有些网络传送渠道并不支持所有的字节，
        例如传统的邮件只支持可见字符的传送，像ASCII码的控制字符就 不能通过邮件传送。
        这样用途就受到了很大的限制，比如图片二进制流的每个字节不可能全部是可见字符，
        所以就传送不了。最好的方法就是在不改变传统协议的情 况下，做一种扩展方案来支持二进制文件的传送。
        把不可打印的字符也能用可打印字符来表示，问题就解决了。Base64编码应运而生，
        Base64就是一种 基于64个可打印字符来表示二进制数据的表示方法。

        有一个数组，里面有“A-Z, a-z, 0-9 , + , /”一共64个字符。然后对需要处理的的二进制数据做处理：
        每3个字节（24bit）一组，因此按照6bit一组为Base64的规则可以划为4组，每组6bit，刚好64位（对应数组的64个值）

        Base64的码表只有64个字符， 如果要表达64个字符的话，使用6的bit即可完全表示(2的6次方为64)。
        如果是字符串转换为Base64码， 会先把对应的字符串转换为ascll码表对应的数字，
        然后再把数字转换为2进制， 比如a的ascll码味97， 97的二进制是：01100001，
        把8个二进制提取成6个，剩下的2个二进制和后面的二进制继续拼接，
        最后再把6个二进制码转换为Base64对于的编码


        所以，Base64编码会把3字节的二进制数据编码为4字节的文本数据，长度增加33%，
        好处是编码后的文本数据可以在邮件正文、网页等直接显示。

        如果要编码的二进制数据不是3的倍数，最后会剩下1个或2个字节怎么办？
        Base64用\x00字节在末尾补足后，再在编码的末尾加上1个或2个=号，表示补了多少字节，解码的时候，会自动去掉。
     */
    public static void main(String[] args) {
        System.out.println("hello");
    }
}
